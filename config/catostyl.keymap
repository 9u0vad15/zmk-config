#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

// Layer aliases
#define DEF 0
#define NUM 1
#define NAV 2

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&pim447_listener {
    input-processors = <&zip_xy_scaler 2 1>;

    /* input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>; */

    /* mouse_layer_1 {
        layers = <1>;
        input-processors = <&zip_xy_to_scroll_mapper>;
    }; */
};

/ {
    combos {
        compatible = "zmk,combos";

        cb_quotes {
            bindings = <&kp APOS>;
            key-positions = <27 28>;
        };

        cb_grave {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
        };

        cb_minus {
            bindings = <&kp MINUS>;
            key-positions = <12 13>;
        };

        cb_equal {
            bindings = <&kp EQUAL>;
            key-positions = <16 17>;
        };

        cb_backslash {
            bindings = <&kp BSLH>;
            key-positions = <29 30>;
        };

        cb_to_nav {
            bindings = <&tog 2>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&mt N1 Q    &mt N2 W     &mt N3 E     &mt N4 R     &mt N5 T       &mt N6 Y    &mt N7 U     &mt N8 I        &mt N9 O      &mt N0 P
&mt LCMD A  &mt LSHFT S  &mt LCTRL D  &mt LSHFT F  &mt LALT G     &mt RALT H  &mt RSHFT J  &mt RCTRL K     &mt RSHFT L   &mt RCMD SEMI
&kp Z       &kp X        &mt LC(C) C  &mt LC(V) V  &kp B          &kp N       &kp M        &mt LBKT COMMA  &mt RBKT DOT  &kp FSLH
                         &kp ESC      &lt NAV TAB  &lt NUM SPACE  &kp BSPC    &lt NAV RET  &kp DEL
            >;
        };

        numbers {
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4    &kp N5    &kp KP_MULTIPLY  &kp N7   &kp N8  &kp N9  &kp PLUS
&kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp KP_DIVIDE    &kp N4   &kp N5  &kp N6  &kp MINUS
&kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &none            &kp N1   &kp N2  &kp N3  &kp EQUAL
                      &trans     &trans    &trans    &none            &kp DOT  &kp N0
            >;
        };

        navigation {
            bindings = <
&kp F1    &kp F2    &kp F3          &kp F4     &kp F5   &kp C_VOL_UP  &kp HOME   &kp UP    &kp END    &none
&kp F6    &kp F7    &kp F8          &kp F9     &kp F10  &kp C_VOL_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &none
&kp LEFT  &kp DOWN  &kp UP          &kp RIGHT  &kp F12  &kp C_MUTE    &kp PG_UP  &kp DOWN  &kp PG_DN  &none
                    &bt BT_CLR_ALL  &none      &none    &none         &none      &none
            >;
        };
    };
};
