#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NUM 1
#define NAV 2

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        cb_caps {
            bindings = <&kp CAPS>;
            key-positions = <20 21>;
            timeout-ms = <50>;
        };

        cb_del {
            bindings = <&kp DEL>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        td_slh: td_slh {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SLH";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q        &kp W  &kp E        &kp R        &kp T        &kp Y       &kp U        &kp I        &kp O    &kp P
&mt LCMD A   &kp S  &mt LCTRL D  &mt LSHFT F  &mt LALT G   &mt RALT H  &mt RSHFT J  &mt RCTRL K  &kp L    &mt RCMD SEMI
&mt LC(Z) Z  &kp X  &mt LC(C) C  &mt LC(V) V  &kp B        &kp N       &kp M        &kp COMMA    &kp DOT  &td_slh
                    &kp ESC      &lt 2 TAB    &lt 1 SPACE  &kp BSPC    &lt 2 RET    &kp APOS
            >;
        };

        numbers {
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4    &kp N5    &kp KP_MULTIPLY  &kp N7   &kp N8  &kp N9  &kp PLUS
&kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp KP_DIVIDE    &kp N4   &kp N5  &kp N6  &kp MINUS
&kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &none            &kp N1   &kp N2  &kp N3  &kp EQUAL
                      &trans     &trans    &trans    &none            &kp DOT  &kp N0
            >;
        };

        navigation {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5   &none  &kp HOME   &kp UP    &kp END    &none
&kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none  &kp LEFT   &kp DOWN  &kp RIGHT  &none
&none   &none   &none   &none   &none    &none  &kp PG_UP  &none     &kp PG_DN  &none
                &none   &none   &none    &none  &none      &none
            >;
        };
    };
};
